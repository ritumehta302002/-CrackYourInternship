class Solution {
public:
    ListNode* ReverseList(ListNode* head){
        ListNode* prev=NULL;
        ListNode* curr=head;
        while(curr!=NULL){
            ListNode* nextTemp = curr->next;
            curr->next=prev;
            prev=curr;
            curr=nextTemp;
        }
        return prev;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        l1=ReverseList(l1);
        l2=ReverseList(l2);
        ListNode* dummy=new ListNode(0);
        ListNode*curr=dummy;
        int carry=0;
        while(l1!=NULL || l2!=NULL || carry!=0){
            int sum = carry;
            if(l1!=NULL){
                sum+=l1->val;
                l1=l1->next;
            }
            if(l2!=NULL){
                sum+=l2->val;
                l2=l2->next;
            }
            carry=sum/10;
            curr->next=new ListNode(sum%10);
            curr=curr->next;
        }
        return ReverseList(dummy->next);
    }
};